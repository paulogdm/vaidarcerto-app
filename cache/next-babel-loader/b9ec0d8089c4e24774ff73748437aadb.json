{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport Avatar from '@material-ui/core/Avatar';\nimport { Skeleton } from '@material-ui/lab';\n\nconst AvatarIndicator = ({\n  dimensions,\n  square\n}) => __jsx(Skeleton, {\n  variant: !square ? 'circle' : 'square',\n  width: dimensions.width,\n  height: dimensions.height\n});\n\nAvatarIndicator.defaultProps = {\n  dimensions: {\n    width: 40,\n    height: 40\n  },\n  square: false\n};\n\nconst WithAvatar = (_ref) => {\n  let {\n    title,\n    imageSrc,\n    dimensions,\n    square\n  } = _ref,\n      rest = _objectWithoutProperties(_ref, [\"title\", \"imageSrc\", \"dimensions\", \"square\"]);\n\n  return __jsx(Avatar, {\n    alt: title,\n    src: imageSrc,\n    variant: !square ? 'circle' : 'square',\n    style: {\n      width: dimensions.width,\n      height: dimensions.height\n    },\n    imgProps: rest.imgProps\n  });\n};\n\nWithAvatar.defaultProps = {\n  src: '',\n  dimensions: {\n    width: 40,\n    height: 40\n  },\n  square: false\n};\nexport { AvatarIndicator, WithAvatar };","map":null,"metadata":{},"sourceType":"module"}