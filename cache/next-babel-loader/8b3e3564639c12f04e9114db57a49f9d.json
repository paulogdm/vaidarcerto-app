{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Doughnut } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  lbTitle: {\n    padding: '18px 16px',\n    fontWeight: 700,\n    letterSpacing: -0.84\n  },\n  bdrBottom: {\n    borderBottom: 'solid 1px rgba(219, 233, 245, 0.6)'\n  },\n  size_18: {\n    fontSize: 18,\n    lineHeight: '24px'\n  },\n  chartCard: {\n    margin: '32px 16px 22px',\n    marginBottom: 50,\n    width: 'calc(100% - 32px)'\n  },\n  noBorder: {\n    border: 'none',\n    boxShadow: 'none'\n  },\n  grafLegends: {\n    alignItems: 'center',\n    padding: '0 16px',\n    margin: '8px 0',\n    [theme.breakpoints.down('xl')]: {\n      padding: '0 10px'\n    }\n  },\n  ctLegend: {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  legColor: {\n    width: 14,\n    height: 14,\n    marginRight: 10,\n    borderRadius: 3\n  },\n  legValue: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    color: '#4b5b65'\n  },\n  legAdjusts: {\n    width: 50,\n    textAlign: 'right'\n  },\n  legFont: {\n    fontSize: 13,\n    fontWeight: 700,\n    letterSpacing: -.28\n  },\n  legPercent: {\n    marginLeft: 2,\n    color: '#5d78ff'\n  }\n}));\n\nconst ChartCard = props => {\n  const {\n    labels,\n    data,\n    backgroundColor,\n    hoverBackgroundColor\n  } = props;\n  const classes = useStyles();\n  return __jsx(Box, {\n    className: clsx(classes.chartCard, classes.noBorder)\n  }, __jsx(Doughnut, {\n    width: 200,\n    legend: {\n      display: false\n    },\n    data: {\n      labels,\n      datasets: [{\n        data,\n        backgroundColor,\n        hoverBackgroundColor\n      }]\n    }\n  }));\n};\n\nconst GrafLegends = props => {\n  const {\n    data\n  } = props;\n  const classes = useStyles();\n  return __jsx(\"div\", null, Object.values(data).map((item, kI) => __jsx(React.Fragment, {\n    key: kI\n  }, __jsx(Box, {\n    className: clsx(classes.root, classes.grafLegends)\n  }, __jsx(Box, {\n    className: clsx(classes.ctLegend, classes.alignStart)\n  }, __jsx(\"div\", {\n    className: classes.legColor,\n    style: {\n      background: `${item.color}`\n    }\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textPrimary\",\n    className: classes.legFont\n  }, item.nome)), __jsx(Box, {\n    className: classes.legValue\n  }, __jsx(Typography, {\n    className: clsx(classes.legQtd, classes.legAdjusts, classes.legFont),\n    variant: \"subtitle2\"\n  }, item.qtd), __jsx(Typography, {\n    className: clsx(classes.legPercent, classes.legAdjusts, classes.legFont),\n    variant: \"subtitle2\"\n  }, item.percent))))));\n};\n\nconst RegionalData = props => {\n  const {\n    data = [],\n    labels\n  } = props;\n  const {\n    0: _labels,\n    1: _setLabels\n  } = useState([]);\n  const {\n    0: _qtd,\n    1: _setQtd\n  } = useState([]);\n  const {\n    0: _bgColors,\n    1: _setBgColors\n  } = useState([]);\n  useEffect(() => {\n    Object.values(data).map(item => {\n      _setLabels(prev => [...prev, item.nome]);\n\n      _setQtd(prev => [...prev, item.qtd]);\n\n      _setBgColors(prev => [...prev, item.color]);\n\n      return item;\n    });\n  }, [data]);\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    className: clsx(classes.lbTitle, classes.size_18, classes.bdrBottom),\n    component: \"p\"\n  }, labels.regionCases), __jsx(ChartCard, {\n    labels: _labels,\n    data: _qtd,\n    backgroundColor: _bgColors,\n    hoverBackgroundColor: _bgColors\n  }), __jsx(GrafLegends, {\n    data: data\n  }));\n};\n\nexport default RegionalData;","map":null,"metadata":{},"sourceType":"module"}