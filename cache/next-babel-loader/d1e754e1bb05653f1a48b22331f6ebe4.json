{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { connectStateResults } from 'react-instantsearch-dom';\nimport { Box, Typography } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\n\nconst CustomResults = ({\n  allSearchResults = null,\n  searchState,\n  searchResults = null,\n  children,\n  isSearchStalled,\n  error,\n  translations = {}\n}) => {\n  const _queryLabel = 'Searching for query:';\n  const _noResultsLabel = 'No records have been found.';\n  const _legendLabel = 'Records found for this query:';\n  const _errorMessage = 'An error has occurred while you were searching. Try it again later';\n\n  if (error) {\n    const errorMsg = _errorMessage; // @TODO send `error` to sentry.io\n\n    console.log(errorMsg);\n  }\n\n  return __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, searchState && searchState.query && __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\"\n  }, __jsx(Typography, {\n    variant: \"overline\"\n  }, translations.query || _queryLabel, \" \", __jsx(\"strong\", null, searchState.query)), searchResults !== null && searchResults.nbHits > 0 && children, searchResults !== null && searchResults.nbHits < 1 && !isSearchStalled && __jsx(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true\n  }, translations.noResults || _noResultsLabel)), allSearchResults !== null && allSearchResults.nbHits > 0 && __jsx(Typography, {\n    variant: \"subtitle2\",\n    style: {\n      marginTop: 10\n    },\n    gutterBottom: true\n  }, translations.legend || _legendLabel, \" \", allSearchResults.nbHits), error && __jsx(Alert, {\n    severity: \"error\"\n  }, translations.errorMessage || _errorMessage));\n};\n\nconst ConnectedResults = connectStateResults(CustomResults);\nexport default ConnectedResults;","map":null,"metadata":{},"sourceType":"module"}