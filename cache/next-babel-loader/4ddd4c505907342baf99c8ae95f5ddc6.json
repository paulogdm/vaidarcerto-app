{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, ListItem, ListItemText, Typography, Chip } from '@material-ui/core';\nimport { itHasLength } from '../../utils/objects';\nimport Link from '../../../components/Link';\nconst useStyles = makeStyles(theme => ({\n  listItemLink: {\n    display: 'flex',\n    '&:hover': {\n      textDecoration: 'none',\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.text.primary\n    }\n  }\n}));\nconst DynamicCustomItemAvatar = dynamic(() => import('./CustomListItemAvatar'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./CustomListItemAvatar')],\n    modules: ['./CustomListItemAvatar']\n  }\n});\n\nconst CustomListItem = props => {\n  const {\n    title,\n    slug,\n    primaryText,\n    category\n  } = props;\n  const classes = useStyles();\n  return __jsx(ListItem, {\n    alignItems: \"flex-start\",\n    component: React.forwardRef((props, myRef) => __jsx(Link, _extends({}, props, {\n      ref: myRef,\n      href: \"/b/[slug]\",\n      as: `/b/${slug}`,\n      color: \"inherit\",\n      className: classes.listItemLink\n    })))\n  }, __jsx(DynamicCustomItemAvatar, {\n    title: title.charAt(0)\n  }), __jsx(ListItemText, {\n    primary: title,\n    secondary: __jsx(React.Fragment, null, __jsx(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\"\n    }, primaryText), __jsx(Box, null, itHasLength(category) && Object.values(category).map((categ, kC) => __jsx(React.Fragment, {\n      key: kC\n    }, __jsx(Chip, {\n      size: \"small\",\n      className: classes.chip,\n      component: \"span\",\n      label: categ\n    }))))),\n    secondaryTypographyProps: {\n      component: \"div\"\n    }\n  }));\n};\n\nexport default CustomListItem;","map":null,"metadata":{},"sourceType":"module"}