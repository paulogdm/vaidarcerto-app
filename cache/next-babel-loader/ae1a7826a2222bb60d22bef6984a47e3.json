{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar __jsx = React.createElement;\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport React from 'react';\nimport { useRouter } from 'next/router';\nimport NextLink from 'next/link';\nimport clsx from 'clsx';\nimport MuiLink from '@material-ui/core/Link';\nvar NextComposed = React.forwardRef(function (props, ref) {\n  var as = props.as,\n      href = props.href,\n      other = _objectWithoutProperties(props, [\"as\", \"href\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    as: as\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other)));\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nvar Link = function Link(props) {\n  var href = props.href,\n      _props$activeClassNam = props.activeClassName,\n      activeClassName = _props$activeClassNam === void 0 ? 'active' : _props$activeClassNam,\n      classNameProps = props.className,\n      innerRef = props.innerRef,\n      naked = props.naked,\n      other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  var router = useRouter();\n  var pathname = typeof href === 'string' ? href : href.pathname;\n  var className = clsx(classNameProps, router.pathname === pathname && activeClassName);\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other));\n};\n\nexport default React.forwardRef(function (props, ref) {\n  return __jsx(Link, _extends({}, props, {\n    innerRef: ref\n  }));\n});","map":null,"metadata":{},"sourceType":"module"}