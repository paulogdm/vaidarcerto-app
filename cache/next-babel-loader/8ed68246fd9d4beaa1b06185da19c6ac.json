{"ast":null,"code":"import algoliasearchLite from 'algoliasearch/lite';\nimport getConfig from '../../config';\nconst fullTextSearch = getConfig.fullTextSearch.algolia; // `notes`, `users`, `customers`, etc.\n\nconst indexName = fullTextSearch.indexName;\nconst searchKey = fullTextSearch.searchKey;\nconst searchClient = algoliasearchLite(fullTextSearch.appId, fullTextSearch.searchApiKey); // Detecting if query is empty (\"\"), then mock an empty response.\n\nconst searchClientSearch = searchClient.search;\n\nsearchClient.search = function search(requests) {\n  if (requests.every(({\n    params\n  }) => !params.query)) {\n    return Promise.resolve({\n      results: requests.map(() => ({\n        hits: [],\n        nbHits: 0,\n        nbPages: 0,\n        processingtimeMS: 0\n      }))\n    });\n  }\n\n  return searchClientSearch(requests);\n};\n\nexport { indexName, searchKey, searchClient };\nexport default searchClient;","map":null,"metadata":{},"sourceType":"module"}