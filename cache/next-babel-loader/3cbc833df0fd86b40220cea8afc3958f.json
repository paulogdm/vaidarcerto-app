{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport grey from '@material-ui/core/colors/grey';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport LightbulbIcon from '~/components/LightbulbIcon';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    textField: {\n      paddingTop: theme.spacing(1),\n      marginLeft: theme.spacing(2),\n      marginRight: theme.spacing(2)\n    },\n    labelOverline: _objectSpread(_objectSpread({}, theme.typography.overline), {}, {\n      color: grey[700]\n    }),\n    inputLabel: {\n      fontWeight: theme.typography.fontWeightBold,\n      fontSize: theme.typography.fontSize\n    },\n    lightBulb: {\n      verticalAlign: 'middle',\n      marginRight: theme.spacing(1),\n      fontSize: 'medium',\n      color: grey[600]\n    },\n    formHelperText: _objectSpread(_objectSpread({}, theme.typography.body2), {}, {\n      color: grey[600]\n    }),\n    wordWrap: {\n      whiteSpace: 'pre-wrap',\n      wordWrap: 'break-word'\n    }\n  };\n});\n\nvar CustomTextField = function CustomTextField(props) {\n  var shrink = props.shrink,\n      helperText = props.helperText,\n      InputStartAdornment = props.InputStartAdornment,\n      InputEndAdornment = props.InputEndAdornment,\n      restProps = _objectWithoutProperties(props, [\"shrink\", \"helperText\", \"InputStartAdornment\", \"InputEndAdornment\"]);\n\n  var classes = useStyles();\n  var InputLabelProps = shrink ? {\n    InputLabelProps: {\n      shrink: true,\n      className: clsx(classes.labelOverline, classes.inputLabel)\n    }\n  } : {};\n  var helperTextProps = helperText ? {\n    helperText: __jsx(React.Fragment, null, __jsx(LightbulbIcon, {\n      className: classes.lightBulb\n    }), __jsx(Typography, {\n      variant: \"body2\",\n      component: \"span\"\n    }, helperText)),\n    FormHelperTextProps: {\n      className: clsx(classes.formHelperText, classes.wordWrap)\n    }\n  } : {};\n  var adornmentClass = {\n    classes: {\n      root: classes.labelOverline\n    }\n  };\n  var InputProps = InputStartAdornment ? {\n    InputProps: {\n      startAdornment: __jsx(InputStartAdornment, _extends({\n        position: \"start\"\n      }, adornmentClass))\n    }\n  } : InputEndAdornment ? {\n    InputProps: {\n      endAdornment: React.cloneElement(InputEndAdornment, _objectSpread({\n        position: 'end'\n      }, adornmentClass))\n    }\n  } : {};\n  return __jsx(TextField, _extends({}, restProps, {\n    className: classes.textField\n  }, helperTextProps, InputLabelProps, InputProps));\n};\n\nexport default CustomTextField;","map":null,"metadata":{},"sourceType":"module"}