{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { cleanDigits } from '../../../modules/utils/strings';\nimport { database, getServerTimestamp } from '../../../modules/firebase/services';\n\nconst create = async postBody => {\n  if (typeof postBody === \"object\" && postBody['title']) {\n    const collectionRef = database.collection('customers');\n    const hasWhatsApp = Boolean(!['', null, undefined, 'undefined'].includes(postBody.whatsApp));\n    const whatsApp = hasWhatsApp ? cleanDigits(postBody.whatsApp) : null;\n    postBody.hasWhatsApp = hasWhatsApp;\n    postBody.whatsApp = whatsApp;\n    postBody.status = 'pending';\n\n    const postData = _objectSpread(_objectSpread({}, postBody), {}, {\n      updatedAt: getServerTimestamp()\n    });\n\n    return collectionRef.add(postData).then(docRef => {\n      const id = docRef.id;\n      const message = 'Doc successfully created!';\n      console.log(message, id);\n      return {\n        message\n      };\n    }).catch(err => {\n      const error = {};\n      error.message = 'Error creating the Ad.';\n      console.error(error, err);\n\n      if (err.code && err.code === 'permission-denied') {\n        error.message = 'Database create permission denied!';\n        return {\n          error\n        };\n      }\n\n      return {\n        error\n      };\n    });\n  }\n\n  return {\n    notObject: true\n  };\n};\n\nexport default create;","map":null,"metadata":{},"sourceType":"module"}