{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Tabs, Tab, Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexGrow: 1,\n    height: props => props.height || 224,\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.down('xs')]: {\n      height: props => (props.height || 224) - 40\n    }\n  },\n  tabs: {\n    minWidth: '30%',\n    width: '30%',\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n  tabRoot: {\n    margin: 0,\n    padding: 0\n  },\n  tabWrapped: {\n    fontSize: 12\n  }\n}));\n\nconst TabPanel = (_ref) => {\n  let {\n    children,\n    value,\n    index\n  } = _ref,\n      restProps = _objectWithoutProperties(_ref, [\"children\", \"value\", \"index\"]);\n\n  return __jsx(Box, _extends({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `vertical-tabpanel-${index}`,\n    \"aria-labelledby\": `vertical-tab-${index}`\n  }, restProps), value === index && __jsx(Box, {\n    p: 1,\n    style: {\n      height: '100%',\n      overflowX: 'auto'\n    }\n  }, children));\n};\n\nconst a11yProps = index => ({\n  id: `vertical-tab-${index}`,\n  'aria-controls': `vertical-tabpanel-${index}`\n});\n\nconst VerticalTabs = (_ref2) => {\n  let {\n    TabPanelProps,\n    dataProps\n  } = _ref2,\n      rest = _objectWithoutProperties(_ref2, [\"TabPanelProps\", \"dataProps\"]);\n\n  const classes = useStyles(rest);\n  const {\n    0: value,\n    1: setValue\n  } = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return __jsx(Box, {\n    className: classes.root\n  }, __jsx(Tabs, {\n    orientation: \"vertical\",\n    variant: \"scrollable\",\n    value: value,\n    onChange: handleChange,\n    \"aria-label\": \"Vertical tabs example\",\n    className: classes.tabs\n  }, Object.keys(dataProps).map((k, i) => {\n    const item = dataProps[k];\n    return __jsx(Tab, _extends({\n      key: k,\n      label: item.title ? item.title : __jsx(Box, {\n        key: k,\n        p: 1,\n        width: '100%'\n      }, __jsx(Skeleton, {\n        animation: false\n      }), __jsx(Skeleton, {\n        animation: \"wave\"\n      })),\n      classes: {\n        root: classes.tabRoot,\n        wrapped: classes.tabWrapped\n      },\n      wrapped: true\n    }, a11yProps(i)));\n  })), Object.keys(dataProps).map((k, i) => {\n    const item = dataProps[k];\n    return __jsx(TabPanel, {\n      key: k,\n      value: value,\n      index: i\n    }, item.title ? __jsx(TabPanelProps.component, item) : __jsx(Box, {\n      p: 1,\n      width: 210,\n      height: 180\n    }, __jsx(Skeleton, {\n      style: {\n        marginBottom: 10\n      }\n    }), __jsx(Skeleton, null), __jsx(Skeleton, {\n      animation: false\n    }), __jsx(Skeleton, {\n      animation: \"wave\",\n      width: '80%'\n    }), __jsx(Skeleton, {\n      animation: \"wave\",\n      width: '70%'\n    })));\n  }));\n};\n\nexport default VerticalTabs;","map":null,"metadata":{},"sourceType":"module"}