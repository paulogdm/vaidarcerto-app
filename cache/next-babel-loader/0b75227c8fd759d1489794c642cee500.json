{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport clsx from 'clsx';\nimport { Link, Box } from '@material-ui/core';\nimport { useCustomerStyles } from '~/assets/styles/customer';\nimport { itHasLength } from '~/modules/utils/objects';\nimport { WithAvatar, AvatarIndicator } from '~/components/customer/AvatarBox';\nimport TitleBox, { TitleIndicator } from '~/components/customer/TitleBox';\nimport PrimaryTextBox, { PrimaryTextIndicator } from '~/components/customer/PrimaryTextBox';\n\nconst CustomerItemBox = props => {\n  const {\n    dataObj,\n    thumbProps,\n    onHandleClick\n  } = props,\n        rest = _objectWithoutProperties(props, [\"dataObj\", \"thumbProps\", \"onHandleClick\"]);\n\n  const classes = useCustomerStyles();\n  return __jsx(React.Fragment, null, !itHasLength(dataObj) ? __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\",\n    className: classes.itemContent\n  }, !rest.noAvatar && __jsx(AvatarIndicator, {\n    dimensions: thumbProps\n  }), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    width: \"100%\"\n  }, __jsx(TitleIndicator, null), !rest.noPrimaryText && __jsx(PrimaryTextIndicator, null))) : __jsx(Box, {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    component: Link,\n    underline: \"none\",\n    onClick: event => onHandleClick(event, dataObj),\n    className: clsx(classes.headerLink, classes.itemContent)\n  }, !rest.noAvatar && __jsx(Box, {\n    mr: 1\n  }, __jsx(WithAvatar, _extends({}, dataObj, {\n    dimensions: thumbProps\n  }))), __jsx(Box, null, __jsx(TitleBox, {\n    styleProps: rest.titleProps,\n    title: dataObj.title,\n    hasPrimaryText: !rest.noPrimaryText\n  }), !rest.noPrimaryText && __jsx(PrimaryTextBox, {\n    primaryText: dataObj.primaryText\n  }))));\n};\n\nexport default CustomerItemBox;","map":null,"metadata":{},"sourceType":"module"}