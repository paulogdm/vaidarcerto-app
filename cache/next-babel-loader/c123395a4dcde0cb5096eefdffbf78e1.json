{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport green from '@material-ui/core/colors/green';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0, 0.5),\n    color: '#fff',\n    fontSize: 30,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[700]\n    }\n  }\n}));\n\nconst WhatsAppChatButton = props => {\n  const {\n    number,\n    commercialText\n  } = props,\n        rest = _objectWithoutProperties(props, [\"number\", \"commercialText\"]);\n\n  const encodedText = encodeURIComponent(commercialText) + \" - \" + encodeURIComponent(`via *${rest.siteName}*`) + \" \" + encodeURIComponent(`${rest.url}`);\n  const numberParam = number !== undefined && number !== null ? number : '';\n  const classes = useStyles();\n  return __jsx(\"a\", {\n    \"aria-label\": \"WhatsApp button\",\n    href: `https://wa.me/${numberParam}?text=${encodedText}`,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\"\n  }, __jsx(WhatsAppIcon, {\n    className: classes.root\n  }));\n};\n\nexport default WhatsAppChatButton;","map":null,"metadata":{},"sourceType":"module"}