{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport fetch from 'node-fetch';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card } from '@material-ui/core';\nimport Layout from '~/components/Layout';\nimport Header from '~/components/Header';\nimport Footer from '~/components/Footer';\nimport config from '~/config';\nimport pageOptions from '~/modules/pageOptions/covid-19';\nimport fetchGlobals from '~/services/api/global-settings';\nconst useStyles = makeStyles(theme => ({\n  containerCards: {\n    width: '100%',\n    alignItems: 'inherit',\n    '@media (max-width: 640px)': {\n      // flexDirection: 'column',\n      display: 'block',\n      textAlign: 'center'\n    }\n  },\n  cardTotal: {\n    overflow: 'hidden',\n    position: 'relative',\n    margin: 10,\n    padding: 16,\n    width: 'calc(50% - 20px)',\n    minWidth: 300,\n    border: 'solid 1px #dbe9f5',\n    borderRadius: 16,\n    boxShadow: '0 4px 6px 0 rgba(31, 70, 88, .04)',\n    '@media (max-width: 640px)': {\n      margin: '0 8px 10px',\n      width: '96%',\n      maxWidth: '96%',\n      minWidth: '96%',\n      textAlign: 'center'\n    },\n    '@media (max-width: 480px)': {\n      margin: '0 5px 10px',\n      width: 'calc(100% - 10px)',\n      maxWidth: 'calc(100% - 10px) ',\n      minWidth: 'calc(100% - 10px) '\n    }\n  },\n  width_30: {\n    width: 'calc(33% - 20px)',\n    maxWidth: 'calc(33% - 20px)'\n  },\n  width_50: {\n    width: 'calc(50% - 20px)',\n    maxWidth: 'calc(50% - 20px)'\n  },\n  width_70: {\n    width: 'calc(70% - 20px)'\n  },\n  width_full: {\n    width: 'calc(100% - 20px)',\n    maxWidth: 'calc(100% - 20px)',\n    minWidth: 'calc(100% - 20px)'\n  },\n  height_384: {\n    height: 'calc(384px - 10px)'\n  },\n  noPadding: {\n    padding: '0px 0px 16px'\n  }\n}));\nconst DynamicPanelInfo = dynamic(() => import('~/components/covid-19/PanelInfo'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/PanelInfo')],\n    modules: ['~/components/covid-19/PanelInfo']\n  }\n});\nconst DynamicGeneralData = dynamic(() => import('~/components/covid-19/GeneralData'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/GeneralData')],\n    modules: ['~/components/covid-19/GeneralData']\n  }\n});\nconst DynamicRegionalData = dynamic(() => import('~/components/covid-19/RegionalData'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/RegionalData')],\n    modules: ['~/components/covid-19/RegionalData']\n  }\n});\nconst DynamicCasesAroundUs = dynamic(() => import('~/components/covid-19/CasesAroundUs'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/CasesAroundUs')],\n    modules: ['~/components/covid-19/CasesAroundUs']\n  }\n});\nconst DynamicDailyResults = dynamic(() => import('~/components/covid-19/DailyResults'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/DailyResults')],\n    modules: ['~/components/covid-19/DailyResults']\n  }\n});\nconst DynamicWeeklyResults = dynamic(() => import('~/components/covid-19/WeeklyResults'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/WeeklyResults')],\n    modules: ['~/components/covid-19/WeeklyResults']\n  }\n});\nconst DynamicAccumulatedData = dynamic(() => import('~/components/covid-19/AccumulatedData'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/covid-19/AccumulatedData')],\n    modules: ['~/components/covid-19/AccumulatedData']\n  }\n});\n\nconst Covid19 = props => {\n  const {\n    fetchedGeneralData,\n    fetchedRegionalData,\n    fetchedMapa,\n    fetchedDailyData,\n    fetchedWeeklyData,\n    fetchedAccumulatedData,\n    seoProps\n  } = props;\n  const router = useRouter();\n  const globalLabels = pageOptions.globalLabels;\n  const globalSettings = pageOptions.globalSettings;\n  const generalDataResults = fetchedGeneralData.results || null;\n  const lastDayGeneralData = generalDataResults ? generalDataResults[generalDataResults.length - 1] : null;\n  const regionalDataResults = fetchedRegionalData.results;\n  const mapaResults = fetchedMapa.results;\n  const selectedRegionsAround = mapaResults && mapaResults.length ? mapaResults.filter(item => globalSettings.regionsAroundUs.includes(item.objectId)) : null;\n  const dailyResults = fetchedDailyData.results;\n  const weeklyResults = fetchedWeeklyData.results;\n  const accumulatedResults = fetchedAccumulatedData.results;\n  const classes = useStyles();\n  return __jsx(Layout, _extends({}, props, {\n    hasLayoutAdjusts: true,\n    routerProps: router,\n    seoProps: seoProps\n  }), __jsx(Header, _extends({\n    router: router\n  }, props)), typeof lastDayGeneralData === \"object\" && __jsx(DynamicPanelInfo, _extends({}, lastDayGeneralData, {\n    labels: globalLabels,\n    settings: globalSettings\n  })), typeof generalDataResults === \"object\" && __jsx(DynamicGeneralData, _extends({}, lastDayGeneralData, {\n    labels: globalLabels,\n    hasLayoutAdjusts: true\n  })), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    className: classes.containerCards\n  }, __jsx(Card, {\n    className: clsx(classes.cardTotal, classes.width_30, classes.noPadding)\n  }, typeof regionalDataResults === \"object\" && __jsx(DynamicRegionalData, {\n    data: regionalDataResults,\n    labels: globalLabels,\n    settings: globalSettings\n  })), __jsx(Card, {\n    className: clsx(classes.cardTotal, classes.width_70, classes.noPadding)\n  }, selectedRegionsAround !== null && __jsx(DynamicCasesAroundUs, {\n    data: selectedRegionsAround,\n    labels: globalLabels\n  }))), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    className: classes.containerCards\n  }, __jsx(Card, {\n    className: clsx(classes.cardTotal, classes.width_50, classes.height_384, classes.noPadding)\n  }, typeof dailyResults === \"object\" && __jsx(DynamicDailyResults, {\n    data: dailyResults,\n    labels: globalLabels\n  })), __jsx(Card, {\n    className: clsx(classes.cardTotal, classes.width_50, classes.height_384, classes.noPadding)\n  }, typeof weeklyResults === \"object\" && __jsx(DynamicWeeklyResults, {\n    data: weeklyResults,\n    labels: globalLabels\n  }))), __jsx(Box, {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    className: classes.containerCards\n  }, __jsx(Card, {\n    className: clsx(classes.cardTotal, classes.width_full, classes.height_384, classes.noPadding)\n  }, typeof accumulatedResults === \"object\" && __jsx(DynamicAccumulatedData, {\n    data: accumulatedResults,\n    labels: globalLabels\n  }))), __jsx(Footer, _extends({\n    router: router\n  }, props)));\n};\n\nconst runApi = async props => {\n  const {\n    uri,\n    headers\n  } = props;\n  const reqOptions = {\n    method: 'GET',\n    mode: 'cors',\n    cache: 'no-cache',\n    headers: _objectSpread({\n      'Content-Type': 'application/json'\n    }, headers)\n  }; // Call an external API endpoint to get data.\n\n  const reqData = await fetch(uri, reqOptions);\n  const fetchedData = await reqData.json();\n  return fetchedData;\n};\n\nconst fetchAccumulatedData = async props => {\n  const options = {\n    uri: props.uri + '/PortalAcumulo',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('Accumulated data was fetched.');\n  return fetchedData;\n};\n\nconst fetchGeneralData = async props => {\n  const options = {\n    uri: props.uri + '/PortalGeral',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('General data was fetched.');\n  return fetchedData;\n};\n\nconst fetchRegionalData = async props => {\n  const options = {\n    uri: props.uri + '/PortalRegiao',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('Regional data was fetched.');\n  return fetchedData;\n};\n\nconst fetchMapa = async props => {\n  const options = {\n    uri: props.uri + '/PortalMapa',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('Mapa data was fetched.');\n  return fetchedData;\n};\n\nconst fetchWeeklyData = async props => {\n  const options = {\n    uri: props.uri + '/PortalSemana',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('Weekly data was fetched.');\n  return fetchedData;\n};\n\nconst fetchDailyData = async props => {\n  const options = {\n    uri: props.uri + '/PortalDias',\n    headers: props.headers\n  };\n  const fetchedData = await runApi(options);\n  console.log('Daily data was fetched.');\n  return fetchedData;\n}; // This function gets called at build time\n\n\nexport const getServerSideProps = async () => {\n  const covid19Config = config.covid19;\n  const govBRprops = {\n    uri: covid19Config.govBRuri,\n    headers: {\n      'x-parse-application-id': covid19Config.govBRappId\n    }\n  };\n  const fetchedGeneralData = await fetchGeneralData(govBRprops);\n  const fetchedRegionalData = await fetchRegionalData(govBRprops);\n  const fetchedMapa = await fetchMapa(govBRprops);\n  const fetchedDailyData = await fetchDailyData(govBRprops);\n  const fetchedWeeklyData = await fetchWeeklyData(govBRprops);\n  const fetchedAccumulatedData = await fetchAccumulatedData(govBRprops); // Fetching globals data from database.\n\n  const globalsResponse = await fetchGlobals();\n  const dataProps = {\n    isNotFound: false\n  };\n  const page = {};\n  const seoProps = {\n    title: pageOptions.name\n  };\n  dataProps.seoProps = seoProps; // By returning { props: posts }, the components\n  // will receive `posts` as a prop at build time\n\n  return {\n    props: _objectSpread(_objectSpread(_objectSpread({\n      fetchedGeneralData,\n      fetchedRegionalData,\n      fetchedMapa,\n      fetchedDailyData,\n      fetchedWeeklyData,\n      fetchedAccumulatedData\n    }, globalsResponse), dataProps), {}, {\n      page\n    })\n  };\n};\nexport default Covid19;","map":null,"metadata":{},"sourceType":"module"}