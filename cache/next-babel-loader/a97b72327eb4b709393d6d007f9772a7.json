{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { makeStyles } from '@material-ui/core/styles';\nimport red from '@material-ui/core/colors/red';\nimport { Place as PlaceIcon, Phone as PhoneIcon } from '@material-ui/icons';\nimport { Snackbar, Card, CardHeader, CardMedia, CardContent, Avatar, Typography, Box, Divider } from '@material-ui/core';\nimport { Alert as MuiAlert } from '@material-ui/lab';\nimport getConfig from '~/config';\nvar DynamicMarkdown = dynamic(function () {\n  return import('react-markdown');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('react-markdown')];\n    },\n    modules: ['react-markdown']\n  }\n});\nvar DynamicTagsBox = dynamic(function () {\n  return import('./TagsBox');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./TagsBox')];\n    },\n    modules: ['./TagsBox']\n  }\n});\nvar DynamicCardActions = dynamic(function () {\n  return import('./CustomCardActions');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('./CustomCardActions')];\n    },\n    modules: ['./CustomCardActions']\n  }\n});\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      width: '100%'\n    },\n    media: _defineProperty({\n      height: 0,\n      paddingTop: '45%',\n      // 1:9\n      backgroundSize: 'contain'\n    }, theme.breakpoints.down('xs'), {\n      height: 180\n    }),\n    avatar: {\n      backgroundColor: red[500]\n    },\n    content: {},\n    mTop: {\n      marginTop: 10\n    },\n    mBottom: {\n      marginBottom: 10\n    },\n    pTop: {\n      paddingTop: 10\n    },\n    pBottom: {\n      paddingBottom: 10\n    },\n    bold: {\n      fontWeight: 'bold'\n    },\n    spaceRight: {\n      marginRight: 2\n    },\n    smallSpacer: {\n      margin: 2\n    }\n  };\n});\n\nvar Alert = function Alert(props) {\n  return __jsx(MuiAlert, _extends({\n    elevation: 6,\n    variant: \"filled\"\n  }, props));\n};\n\nvar configLabels = {\n  phone: 'Telefone:',\n  copyLink: 'Copiar link',\n  commercialText: 'Gostaria de mais informações sobre '\n};\n\nvar hasValue = function hasValue(address) {\n  return address !== undefined && address !== null && address.length > 0;\n};\n\nvar BusinessCardItem = function BusinessCardItem(props) {\n  var item = props.item,\n      router = props.router;\n  var globalSettings = getConfig.globalSettings;\n\n  var _useState = useState(false),\n      isAlertOpened = _useState[0],\n      setAlertOpened = _useState[1];\n\n  var classes = useStyles();\n\n  var handleAlertClose = function handleAlertClose(event, reason) {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setAlertOpened(false);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Card, {\n    className: classes.root\n  }, __jsx(CardHeader, {\n    avatar: __jsx(Avatar, {\n      \"aria-label\": \"recipe\",\n      className: classes.avatar\n    }, item.title.charAt(0)),\n    title: item.title,\n    subheader: item.primaryText\n  }), Boolean(item.hasLogo) && String(item.image) !== null && __jsx(CardMedia, {\n    className: classes.media,\n    image: item.image,\n    title: item.title\n  }), __jsx(CardContent, {\n    className: classes.content\n  }, __jsx(Typography, {\n    className: classes.mBottom,\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"div\"\n  }, __jsx(DynamicMarkdown, {\n    source: item.secondaryText\n  })), __jsx(Divider, null), __jsx(Box, {\n    mt: 1\n  }, hasValue(item.address) && __jsx(Box, {\n    display: \"flex\"\n  }, __jsx(Typography, {\n    display: \"inline\",\n    className: classes.spaceRight\n  }, __jsx(PlaceIcon, {\n    color: \"action\",\n    fontSize: \"small\"\n  })), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"span\"\n  }, item.address)), typeof item.phone !== 'undefined' && __jsx(Box, {\n    display: \"flex\",\n    className: classes.mBottom\n  }, __jsx(Typography, {\n    display: \"inline\",\n    className: classes.spaceRight\n  }, __jsx(PhoneIcon, {\n    color: \"action\",\n    fontSize: \"small\"\n  })), __jsx(Typography, {\n    className: classes.bold,\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"span\"\n  }, configLabels.phone), __jsx(\"div\", {\n    className: classes.smallSpacer\n  }), __jsx(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"span\"\n  }, item.phone))), __jsx(DynamicTagsBox, {\n    dataObj: item,\n    route: {\n      pathname: '/tag/[slug]',\n      href: '/tag/{param}'\n    }\n  }), __jsx(Snackbar, {\n    open: isAlertOpened,\n    autoHideDuration: 3000,\n    onClose: handleAlertClose\n  }, __jsx(Alert, {\n    onClose: handleAlertClose,\n    severity: \"success\"\n  }, \"Link copied\"))), Boolean(globalSettings !== null) && __jsx(DynamicCardActions, {\n    globalSettings: globalSettings,\n    routerProps: router,\n    itemProps: item,\n    commercialText: configLabels.commercialText + item.category.join(', '),\n    handleAlertOpened: setAlertOpened,\n    labels: configLabels\n  })));\n};\n\nexport default BusinessCardItem;","map":null,"metadata":{},"sourceType":"module"}