{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  headerList: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  headerItem: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    fontSize: 11,\n    lineHeight: '14px',\n    fontWeight: 400,\n    textAlign: 'right'\n  },\n  labelItem: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    textAlign: 'right',\n    padding: theme.spacing(0.5, 2),\n    color: theme.palette.text.secondary\n  },\n  lbTitle: {\n    padding: '18px 16px',\n    fontWeight: 700,\n    letterSpacing: -0.84\n  },\n  labelName: {\n    display: 'flex',\n    justifyContent: 'flex-start',\n    textAlign: 'left',\n    padding: theme.spacing(0.5, 2),\n    color: theme.palette.text.secondary\n  },\n  bdrBottom: {\n    borderBottom: 'solid 1px rgba(219, 233, 245, 0.6)'\n  },\n  size_18: {\n    fontSize: 18,\n    lineHeight: '24px'\n  }\n}));\n\nconst GridHeaderList = props => {\n  const {\n    confirmed,\n    deaths,\n    lethality\n  } = props;\n  const classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    item: true,\n    className: classes.headerList\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4\n  }), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    className: classes.headerItem\n  }, __jsx(Typography, {\n    variant: \"caption\"\n  }, confirmed)), __jsx(Grid, {\n    item: true,\n    xs: 2,\n    className: classes.headerItem\n  }, __jsx(Typography, {\n    variant: \"caption\"\n  }, deaths)), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    className: classes.headerItem\n  }, __jsx(Typography, {\n    variant: \"caption\"\n  }, lethality)));\n};\n\nconst GridItem = props => {\n  const {\n    nome,\n    qtd_confirmado,\n    qtd_obito,\n    letalidade\n  } = props;\n  const classes = useStyles();\n  return __jsx(Grid, {\n    container: true,\n    item: true\n  }, __jsx(Grid, {\n    item: true,\n    xs: 4\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.labelName\n  }, nome)), __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.labelItem\n  }, qtd_confirmado)), __jsx(Grid, {\n    item: true,\n    xs: 2\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.labelItem\n  }, qtd_obito)), __jsx(Grid, {\n    item: true,\n    xs: 3\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.labelItem\n  }, letalidade)));\n};\n\nconst CasesAroundUs = props => {\n  const {\n    data = [],\n    labels\n  } = props;\n  const classes = useStyles();\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    className: clsx(classes.lbTitle, classes.size_18, classes.bdrBottom, classes.noMargin),\n    component: \"p\"\n  }, labels.casesAroundUs), __jsx(Box, {\n    className: classes.root,\n    pt: 1\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 2\n  }, __jsx(GridHeaderList, labels), Object.values(data).map((item, kI) => __jsx(React.Fragment, {\n    key: kI\n  }, __jsx(GridItem, _extends({}, item, {\n    labels: labels\n  })))))));\n};\n\nexport default CasesAroundUs;","map":null,"metadata":{},"sourceType":"module"}