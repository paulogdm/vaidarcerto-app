{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { InstantSearch, Configure } from 'react-instantsearch-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { searchClient, translations } from '../instantsearch';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(1),\n    padding: theme.spacing(3)\n  }\n}));\nconst DynamicConnectedSearchBox = dynamic(() => import('./ConnectedSearchBox'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedSearchBox')],\n    modules: ['./ConnectedSearchBox']\n  }\n});\nconst DynamicLoadingIndicator = dynamic(() => import('./LoadingIndicator'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./LoadingIndicator')],\n    modules: ['./LoadingIndicator']\n  }\n});\nconst DynamicConnectedCategoriesList = dynamic(() => import('./ConnectedCategoriesList'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedCategoriesList')],\n    modules: ['./ConnectedCategoriesList']\n  }\n});\nconst DynamicConnectedHits = dynamic(() => import('./ConnectedHits'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedHits')],\n    modules: ['./ConnectedHits']\n  }\n});\nconst DynamicConnectedResults = dynamic(() => import('./ConnectedResults'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedResults')],\n    modules: ['./ConnectedResults']\n  }\n});\nconst DynamicConnectedWhatsAppFilter = dynamic(() => import('./ConnectedWhatsAppFilter'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedWhatsAppFilter')],\n    modules: ['./ConnectedWhatsAppFilter']\n  }\n});\nconst DynamicConnectedPoweredBy = dynamic(() => import('./ConnectedPoweredBy'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedPoweredBy')],\n    modules: ['./ConnectedPoweredBy']\n  }\n});\nconst DynamicConnectedPagination = dynamic(() => import('./ConnectedPagination'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./ConnectedPagination')],\n    modules: ['./ConnectedPagination']\n  }\n});\n\nconst ShowInstantApp = props => {\n  const {\n    hasFilters,\n    hitsPerPage,\n    onSearchStateChange,\n    createURL\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"hasFilters\", \"hitsPerPage\", \"onSearchStateChange\", \"createURL\"]);\n\n  const _t = translations['ptBR']();\n\n  return __jsx(InstantSearch, _extends({\n    indexName: 'customers',\n    searchClient: searchClient,\n    searchState: restProps.searchState,\n    resultsState: restProps.resultsState,\n    onSearchStateChange: onSearchStateChange,\n    onSearchParameters: restProps.onSearchParameters,\n    createURL: createURL\n  }, restProps), __jsx(Configure, {\n    hitsPerPage: hitsPerPage || 12\n  }), __jsx(DynamicConnectedSearchBox, {\n    translations: _t.searchBox,\n    refinementCategory: hasFilters && __jsx(DynamicConnectedCategoriesList, {\n      attribute: \"category\",\n      translations: _t.categoriesFilter\n    }),\n    refinementWhatsApp: hasFilters && __jsx(DynamicConnectedWhatsAppFilter, {\n      attribute: \"hasWhatsApp\",\n      label: 'has WhatsApp',\n      value: true // value to apply when it's checked\n      ,\n      defaultRefinement: false,\n      translations: _t.whatsAppFilter\n    })\n  }), __jsx(DynamicConnectedPoweredBy, null), __jsx(DynamicConnectedResults, {\n    translations: _t.results\n  }, __jsx(DynamicConnectedHits, null), __jsx(DynamicConnectedPagination, null)), __jsx(DynamicLoadingIndicator, null));\n};\n\nconst SearchApp = props => {\n  const {\n    0: showChild,\n    1: setShowChild\n  } = useState(false);\n\n  const _t = translations['ptBR']();\n\n  const classes = useStyles();\n  useEffect(() => {\n    setShowChild(true);\n  }, []);\n  return __jsx(Paper, {\n    elevation: 3,\n    className: classes.paper\n  }, !showChild ? __jsx(Box, {\n    width: \"100%\"\n  }, __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 150\n  })) : __jsx(ShowInstantApp, props));\n};\n\nexport default SearchApp;","map":null,"metadata":{},"sourceType":"module"}