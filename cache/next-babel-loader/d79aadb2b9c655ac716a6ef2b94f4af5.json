{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport dynamic from 'next/dynamic';\nimport { Grid, Typography, Button, Divider, Box } from '@material-ui/core';\nimport { mockArrayData } from '~/modules/utils/objects';\nimport { useCustomerStyles } from '~/assets/styles/customer';\nimport CustomerItemBox from '~/components/customer/CustomerItemBox';\nconst CustomersListCallback = dynamic(() => import('~/components/callbacks/CustomersListCallback'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/callbacks/CustomersListCallback')],\n    modules: ['~/components/callbacks/CustomersListCallback']\n  }\n});\n\nconst ItemGrid = props => {\n  const {\n    itemProps,\n    handleCustomerProps,\n    handleLinkClickProps\n  } = props,\n        rest = _objectWithoutProperties(props, [\"itemProps\", \"handleCustomerProps\", \"handleLinkClickProps\"]);\n\n  const classes = useCustomerStyles();\n  return __jsx(Grid, {\n    key: rest.key,\n    container: true,\n    item: true,\n    className: classes.paper\n  }, __jsx(CustomerItemBox, {\n    noAvatar: rest.noAvatar,\n    dataObj: itemProps,\n    onHandleClick: event => {\n      handleCustomerProps(itemProps);\n      handleLinkClickProps(event, '/b/[slug]', `/b/${itemProps.slug}`);\n    }\n  }));\n};\n\nconst CustomersList = props => {\n  const {\n    sectionTitle,\n    filterProps\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"sectionTitle\", \"filterProps\"]);\n\n  const classes = useCustomerStyles();\n  return __jsx(React.Fragment, null, __jsx(CustomersListCallback, {\n    filterBy: filterProps\n  }, (_ref) => {\n    let {\n      dataProps\n    } = _ref,\n        callbackRest = _objectWithoutProperties(_ref, [\"dataProps\"]);\n\n    return __jsx(Grid, {\n      container: true,\n      direction: \"column\",\n      item: true,\n      xs: 12\n    }, __jsx(Grid, {\n      item: true,\n      xs: true\n    }, __jsx(Typography, {\n      variant: \"subtitle2\",\n      color: \"secondary\"\n    }, sectionTitle)), __jsx(Grid, {\n      container: true,\n      item: true,\n      xs: 12\n    }, Object.keys(dataProps.status === 'fetching' ? mockArrayData(5) : dataProps.data).map((k, i) => __jsx(ItemGrid, _extends({\n      key: k\n    }, restProps, {\n      itemProps: dataProps.data[k]\n    }, callbackRest)))), __jsx(Grid, {\n      item: true,\n      xs: true,\n      className: classes.spacing\n    }, __jsx(Divider, {\n      variant: \"fullWidth\"\n    }), __jsx(Box, {\n      pt: 1\n    }, __jsx(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      fullWidth: true\n    }, \"Ver mais servi\\xE7os\"))));\n  }));\n};\n\nexport default CustomersList;","map":null,"metadata":{},"sourceType":"module"}