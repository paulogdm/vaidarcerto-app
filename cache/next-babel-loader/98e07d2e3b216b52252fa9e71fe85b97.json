{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, IconButton, Typography, MenuItem, Menu, Icon } from '@material-ui/core';\nimport { Menu as MenuIcon, Search as SearchIcon } from '@material-ui/icons';\nimport { grey, blueGrey } from '@material-ui/core/colors';\nimport NextLink from '~/components/Link';\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1\n  },\n  appBar: {\n    backgroundColor: blueGrey[600]\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {},\n  inputRoot: {\n    color: 'inherit'\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch'\n      }\n    }\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex'\n    }\n  },\n  sectionMobile: {\n    display: 'flex',\n    alignItems: 'center',\n    [theme.breakpoints.up('md')]: {\n      display: 'none'\n    }\n  },\n  menuItem: {\n    '&:hover': {\n      opacity: 0.6\n    }\n  },\n  link: {\n    display: 'flex',\n    alignItems: 'center',\n    color: grey[100],\n    '&:hover': {\n      textDecoration: 'none'\n    }\n  }\n}));\n\nconst SearchIconLink = () => {\n  const classes = useStyles();\n  return __jsx(NextLink, {\n    href: \"/search\",\n    \"aria-label\": \"Search page\",\n    className: classes.link\n  }, __jsx(IconButton, {\n    \"aria-label\": \"Search\",\n    color: \"inherit\"\n  }, __jsx(SearchIcon, null)));\n};\n\nconst PrimarySearchAppBar = props => {\n  const {\n    appTitle,\n    menuHeader = {}\n  } = props,\n        rest = _objectWithoutProperties(props, [\"appTitle\", \"menuHeader\"]);\n\n  const classes = useStyles();\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n\n  const renderMobileMenu = __jsx(Menu, {\n    anchorEl: mobileMoreAnchorEl,\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    id: mobileMenuId,\n    keepMounted: true,\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: isMobileMenuOpen,\n    onClose: handleMobileMenuClose\n  }, Object.values(menuHeader).map((item, kI) => __jsx(MenuItem, {\n    key: kI\n  }, __jsx(NextLink, {\n    href: item.pathname,\n    as: item.asPath,\n    classes: {\n      root: classes.link\n    }\n  }, __jsx(IconButton, {\n    key: kI,\n    \"aria-label\": item.title,\n    \"aria-controls\": mobileMenuId\n  }, __jsx(Icon, {\n    color: \"inherit\",\n    fontSize: \"small\"\n  }, item.itemIcon)), __jsx(Typography, {\n    variant: \"subtitle1\",\n    color: \"textPrimary\"\n  }, item.title)))));\n\n  return __jsx(React.Fragment, null, __jsx(AppBar, {\n    position: \"sticky\"\n  }, __jsx(Toolbar, {\n    className: classes.appBar\n  }, __jsx(NextLink, {\n    href: \"/\",\n    \"aria-label\": \"Link to Home page\",\n    classes: {\n      root: classes.link\n    }\n  }, __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    noWrap: true\n  }, appTitle, \" \", __jsx(\"code\", null, \"DIGITAL\"))), __jsx(\"div\", {\n    className: classes.grow\n  }), __jsx(\"div\", {\n    className: classes.sectionDesktop\n  }, __jsx(SearchIconLink, null), Object.values(menuHeader).map((item, kI) => __jsx(MenuItem, {\n    key: kI,\n    className: classes.menuItem\n  }, __jsx(NextLink, {\n    href: item.pathname,\n    as: item.asPath,\n    \"aria-label\": item.title,\n    classes: {\n      root: classes.link\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, item.title))))), __jsx(\"div\", {\n    className: classes.sectionMobile\n  }, __jsx(SearchIconLink, null), __jsx(IconButton, {\n    \"aria-label\": \"Menu\",\n    \"aria-controls\": mobileMenuId,\n    \"aria-haspopup\": \"true\",\n    onClick: handleMobileMenuOpen,\n    color: \"inherit\"\n  }, __jsx(MenuIcon, null))))), renderMobileMenu);\n};\n\nexport default PrimarySearchAppBar;","map":null,"metadata":{},"sourceType":"module"}