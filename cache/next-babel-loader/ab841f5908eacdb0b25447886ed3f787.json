{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline, LinearProgress } from '@material-ui/core';\nimport getConfig from '../config';\nimport { AppProvider } from '../AppContext';\nimport myTheme from '~/modules/theme';\n\nconst RouterProvider = ({\n  children\n}) => {\n  const Router = useRouter();\n  const {\n    0: status,\n    1: setStatus\n  } = useState(null);\n  useEffect(() => {\n    const handleRouteChange = url => {\n      setStatus('changing');\n    };\n\n    const handleRouteComplete = url => {\n      setStatus('completed');\n    };\n\n    Router.events.on('routeChangeStart', handleRouteChange);\n    Router.events.on('routeChangeComplete', handleRouteComplete);\n    return () => {\n      Router.events.off('routeChangeStart', handleRouteChange);\n      Router.events.off('routeChangeComplete', handleRouteComplete);\n    };\n  }, [status]);\n  return __jsx(React.Fragment, null, status === 'changing' && __jsx(\"div\", {\n    style: {\n      position: 'fixed',\n      width: '100%',\n      zIndex: 10000\n    }\n  }, __jsx(LinearProgress, null)), children);\n};\n\nconst MyApp = props => {\n  const {\n    Component,\n    pageProps\n  } = props;\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles && jssStyles.parentNode) {\n      jssStyles.parentNode.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(AppProvider, null, __jsx(ThemeProvider, {\n    theme: myTheme\n  }, __jsx(CssBaseline, null), __jsx(RouterProvider, null, __jsx(Component, _extends({}, pageProps, {\n    globalSettings: getConfig.globalSettings\n  })))));\n};\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}