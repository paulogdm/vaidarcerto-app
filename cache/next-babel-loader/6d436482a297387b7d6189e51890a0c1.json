{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport NumberFormat from 'react-number-format';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography, Paper, Button, InputAdornment } from '@material-ui/core';\nimport { Skeleton, Autocomplete } from '@material-ui/lab';\nimport { cleanDigits } from '~/modules/utils/strings';\nimport { itHasLength } from '~/modules/utils/objects';\nimport fetchCategories from '~/services/api/get-categories';\nimport createAd from '~/services/api/customers/create';\nimport Layout from '~/components/Layout';\nimport Header from '~/components/Header';\nimport TextField from '~/components/form/TextField';\nimport Footer from '~/components/Footer';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    paper: {\n      width: '100%',\n      marginBottom: theme.spacing(1),\n      padding: theme.spacing(3)\n    },\n    alignRight: {\n      alignSelf: 'flex-end',\n      textAlign: 'right'\n    },\n    inputRoot: {\n      paddingTop: theme.spacing(1.5)\n    },\n    labelToInputSpaces: _defineProperty({\n      marginTop: 0\n    }, theme.breakpoints.down('xs'), {\n      marginTop: 30\n    }),\n    chipRoot: {\n      margin: theme.spacing(0.5)\n    }\n  };\n});\nvar DynamicSnackbar = dynamic(function () {\n  return import('~/components/Snackbar');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('~/components/Snackbar')];\n    },\n    modules: ['~/components/Snackbar']\n  }\n});\n\nvar hasValue = function hasValue(arr, key, prop) {\n  return arr[key] && arr[key][prop] && arr[key][prop].length > 0 ? arr[key][prop] : false;\n};\n\nvar DigitsOnlyCustom = function DigitsOnlyCustom(_ref) {\n  var inputRef = _ref.inputRef,\n      other = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n  return __jsx(NumberFormat, _extends({}, other, {\n    format: other.format,\n    mask: \"_\"\n  }));\n};\n\nvar CharsCountAdortment = function CharsCountAdortment(_ref2) {\n  var obj = _ref2.obj,\n      other = _objectWithoutProperties(_ref2, [\"obj\"]);\n\n  return __jsx(InputAdornment, other, obj.value && obj.value.length || 0, '/', obj.lengthDesired.max);\n};\n\nvar PageContent = function PageContent(props) {\n  var _jsx;\n\n  var fields = props.fields,\n      requiredFieldsLabel = props.requiredFieldsLabel,\n      submitLabel = props.submitLabel,\n      errorMessage = props.errorMessage,\n      successMessage = props.successMessage,\n      analysisMessage = props.analysisMessage;\n\n  var _useState = useState(fields),\n      values = _useState[0],\n      setValues = _useState[1];\n\n  var _useState2 = useState({}),\n      formErrors = _useState2[0],\n      setFormErrors = _useState2[1];\n\n  var _useState3 = useState(false),\n      isSending = _useState3[0],\n      setSending = _useState3[1];\n\n  var _useState4 = useState(false),\n      isAlertOpened = _useState4[0],\n      setOpenAlert = _useState4[1];\n\n  var _useState5 = useState(false),\n      isBlockedButton = _useState5[0],\n      setBlockedButton = _useState5[1];\n\n  var _useState6 = useState({}),\n      alertMessage = _useState6[0],\n      setAlertMessage = _useState6[1];\n\n  var classes = useStyles();\n\n  var handleChange = function handleChange(event) {\n    var newObj = _defineProperty({}, event.target.name, _objectSpread(_objectSpread({}, values[event.target.name]), {}, {\n      value: event.target.value\n    }));\n\n    setValues(_objectSpread(_objectSpread({}, values), newObj));\n  };\n\n  var onFormErrors = function onFormErrors(newObj) {\n    setFormErrors(newObj);\n  };\n\n  var onHandleSubmit = function onHandleSubmit(event) {\n    event.preventDefault();\n    var newObjValues = {};\n    var newObjErrors = {}; // Checking for type of inputs..\n\n    Object.keys(values).map(function (kI) {\n      if (hasValue(values, kI, 'value')) {\n        var _tempValue = values[kI].value;\n\n        if (values[kI].type === 'tel') {\n          _tempValue = cleanDigits(values[kI].value);\n          if (!_tempValue) newObjErrors[kI] = {\n            unclean: true\n          };\n        } // In case there's a value after all, try to check its length..\n\n\n        if (_tempValue.length < values[kI].lengthDesired.min) {\n          newObjErrors[kI] = {\n            notMin: true\n          };\n        } else if (_tempValue.length > values[kI].lengthDesired.max) {\n          newObjErrors[kI] = {\n            exceedMax: true\n          };\n        } else {\n          newObjValues[kI] = _tempValue;\n        } // In case it doesn't has a value but it's a required field..\n\n      } else if (values[kI].required) {\n        newObjErrors[kI] = {\n          required: true\n        };\n      }\n\n      return kI;\n    }); // check for any errors...\n\n    if (Object.keys(newObjErrors).length > 0) {\n      onFormErrors(newObjErrors);\n    } else {\n      onFormErrors({});\n      setSending(true);\n      setBlockedButton(true);\n      setOpenAlert(true);\n      setAlertMessage({\n        type: 'info',\n        text: 'Loading...'\n      }); // Submit the form data...\n\n      createAd({\n        body: JSON.stringify(newObjValues),\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(function (result) {\n        return setAlertMessage({\n          type: 'success',\n          text: successMessage\n        });\n      }).catch(function (err) {\n        return setAlertMessage({\n          type: 'error',\n          text: errorMessage\n        });\n      }).finally(function () {\n        setSending(false);\n        setBlockedButton(false);\n      });\n    }\n  };\n\n  var handleClose = function handleClose() {\n    setOpenAlert(false);\n    setBlockedButton(false);\n  };\n\n  var title = values.title,\n      primaryText = values.primaryText,\n      secondaryText = values.secondaryText,\n      inCharge = values.inCharge,\n      idCard = values.idCard,\n      phone = values.phone,\n      email = values.email,\n      category = values.category,\n      address = values.address,\n      placeLink = values.placeLink,\n      whatsApp = values.whatsApp,\n      telegram = values.telegram;\n  return __jsx(Box, {\n    component: \"main\"\n  }, (!alertMessage || alertMessage.type !== 'success') && __jsx(Box, {\n    className: clsx(classes.root, classes.alignRight)\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    gutterBottom: true\n  }, requiredFieldsLabel), __jsx(Box, {\n    className: classes.root\n  }, __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\"\n  }, __jsx(TextField, {\n    id: \"title\",\n    name: \"title\",\n    error: Boolean(formErrors.title),\n    label: title.titleLabel,\n    onChange: handleChange,\n    helperText: title.titleInfo,\n    placeholder: title.placeholder,\n    fullWidth: true,\n    margin: \"dense\",\n    required: title.required,\n    shrink: true,\n    inputProps: {\n      maxLength: title.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: title\n    })\n  }), __jsx(TextField, {\n    id: \"primaryText\",\n    name: \"primaryText\",\n    error: Boolean(formErrors.primaryText),\n    label: primaryText.titleLabel,\n    onChange: handleChange,\n    placeholder: primaryText.placeholder,\n    helperText: primaryText.titleInfo,\n    fullWidth: true,\n    margin: \"dense\",\n    required: primaryText.required,\n    shrink: true,\n    inputProps: {\n      maxLength: primaryText.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: primaryText\n    })\n  })), __jsx(Box, {\n    display: \"flex\",\n    mt: 1,\n    width: \"100%\"\n  }, __jsx(TextField, {\n    id: \"secondaryText\",\n    name: \"secondaryText\",\n    error: Boolean(formErrors.secondaryText),\n    label: secondaryText.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '100%'\n    },\n    placeholder: secondaryText.titleInfo,\n    multiline: true,\n    rows: 2,\n    rowsMax: 4,\n    required: secondaryText.required,\n    helperText: secondaryText.titleInfo,\n    margin: \"normal\",\n    shrink: true,\n    inputProps: {\n      maxLength: secondaryText.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: secondaryText\n    })\n  })), __jsx(Box, {\n    display: \"flex\",\n    mt: 1,\n    width: \"100%\"\n  }, __jsx(TextField, {\n    id: \"inCharge\",\n    name: \"inCharge\",\n    error: Boolean(formErrors.inCharge),\n    label: inCharge.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    required: inCharge.required,\n    margin: \"normal\",\n    shrink: true,\n    inputProps: {\n      maxLength: inCharge.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: inCharge\n    })\n  }), __jsx(TextField, {\n    id: \"idCard\",\n    name: \"idCard\",\n    error: Boolean(formErrors.idCard),\n    label: idCard.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    required: idCard.required,\n    helperText: idCard.titleInfo,\n    margin: \"normal\",\n    shrink: true,\n    inputProps: {\n      maxLength: idCard.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: idCard\n    })\n  })), __jsx(Box, {\n    display: \"flex\",\n    width: \"100%\"\n  }, __jsx(TextField, (_jsx = {\n    id: \"phone\",\n    name: \"phone\",\n    error: Boolean(formErrors.phone),\n    label: phone.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    helperText: phone.titleInfo,\n    required: phone.required,\n    type: phone.type,\n    margin: \"normal\"\n  }, _defineProperty(_jsx, \"required\", phone.required), _defineProperty(_jsx, \"shrink\", true), _defineProperty(_jsx, \"InputProps\", {\n    inputComponent: DigitsOnlyCustom,\n    inputProps: {\n      format: phone.format,\n      allowEmptyFormatting: phone.showMask\n    }\n  }), _jsx)), __jsx(TextField, {\n    id: \"email\",\n    name: \"email\",\n    error: Boolean(formErrors.email),\n    label: email.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    helperText: email.titleInfo,\n    type: \"email\",\n    required: email.required,\n    margin: \"normal\",\n    shrink: true,\n    inputProps: {\n      maxLength: email.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: email\n    })\n  })), __jsx(Box, {\n    display: \"flex\",\n    mt: 1,\n    width: \"100%\"\n  }, __jsx(Autocomplete, {\n    id: \"category\",\n    multiple: true,\n    size: \"small\",\n    classes: {\n      inputRoot: classes.inputRoot\n    },\n    onChange: function onChange(event, newValue) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, {\n        category: _objectSpread(_objectSpread({}, values.category), {}, {\n          value: newValue\n        })\n      }));\n    },\n    style: {\n      display: 'flex',\n      width: '100%'\n    },\n    options: category.categoriesList,\n    defaultValue: category.defaultValues,\n    filterSelectedOptions: true,\n    ChipProps: {\n      size: 'medium',\n      classes: {\n        root: classes.chipRoot\n      }\n    },\n    renderInput: function renderInput(params) {\n      return __jsx(TextField, _extends({}, params, {\n        variant: \"standard\",\n        name: \"category\",\n        error: Boolean(formErrors.category),\n        label: category.titleLabel,\n        placeholder: category.placeholder,\n        margin: \"normal\",\n        helperText: category.titleInfo,\n        shrink: true\n      }));\n    }\n  })), __jsx(Box, {\n    display: \"flex\",\n    mt: 1,\n    width: \"100%\"\n  }, __jsx(TextField, {\n    id: \"address\",\n    name: \"address\",\n    error: Boolean(formErrors.address),\n    label: address.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    helperText: address.titleInfo,\n    margin: \"dense\",\n    shrink: true,\n    inputProps: {\n      maxLength: address.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: address\n    })\n  }), __jsx(TextField, {\n    id: \"placeLink\",\n    name: \"placeLink\",\n    error: Boolean(formErrors.placeLink),\n    onChange: handleChange,\n    label: placeLink.titleLabel,\n    style: {\n      width: '50%'\n    },\n    helperText: placeLink.titleInfo,\n    margin: \"dense\",\n    shrink: true,\n    inputProps: {\n      maxLength: placeLink.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: placeLink\n    })\n  })), __jsx(Box, {\n    display: \"flex\",\n    my: 2,\n    width: \"100%\"\n  }, __jsx(TextField, {\n    id: \"whatsApp\",\n    name: \"whatsApp\",\n    error: Boolean(formErrors.whatsApp),\n    label: whatsApp.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    type: whatsApp.type,\n    helperText: whatsApp.titleInfo,\n    margin: \"normal\",\n    required: whatsApp.required,\n    shrink: true,\n    InputProps: {\n      inputComponent: DigitsOnlyCustom,\n      inputProps: {\n        format: whatsApp.format,\n        allowEmptyFormatting: whatsApp.showMask,\n        className: classes.labelToInputSpaces\n      }\n    }\n  }), __jsx(TextField, {\n    id: \"telegram\",\n    name: \"telegram\",\n    error: Boolean(formErrors.telegram),\n    label: telegram.titleLabel,\n    onChange: handleChange,\n    style: {\n      width: '50%'\n    },\n    placeholder: telegram.username,\n    helperText: telegram.titleInfo,\n    margin: \"normal\",\n    shrink: true,\n    inputProps: {\n      maxLength: telegram.lengthDesired.max\n    },\n    InputEndAdornment: __jsx(CharsCountAdortment, {\n      obj: telegram\n    })\n  }))), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.alignRight,\n    style: {\n      margin: 20,\n      width: 200\n    },\n    onClick: onHandleSubmit,\n    disabled: isBlockedButton\n  }, submitLabel)), __jsx(DynamicSnackbar, {\n    open: isAlertOpened,\n    onClose: handleClose,\n    messageClass: alertMessage !== null && alertMessage.type || 'info',\n    message: alertMessage !== null && alertMessage.text\n  }), alertMessage && alertMessage.type === 'success' && __jsx(Box, {\n    className: classes.root,\n    justifyContent: \"center\",\n    p: 4,\n    minHeight: 200,\n    width: \"100%\"\n  }, __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, analysisMessage)));\n};\n\nvar AuthRegister = function AuthRegister(props) {\n  var page = props.page,\n      seoProps = props.seoProps,\n      isNotFound = props.isNotFound,\n      rest = _objectWithoutProperties(props, [\"page\", \"seoProps\", \"isNotFound\"]);\n\n  var router = useRouter();\n\n  var _useState7 = useState([]),\n      categoriesList = _useState7[0],\n      setCategories = _useState7[1];\n\n  var _useState8 = useState(true),\n      isLoading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useState9 = useState(page),\n      pageOptions = _useState9[0],\n      setPageOptions = _useState9[1];\n\n  var classes = useStyles();\n  useEffect(function () {\n    if (!Boolean(isNotFound)) {\n      fetchCategories().then(function (result) {\n        return setCategories(result);\n      }).catch(function (err) {\n        console.error('Fetching categories list: ', err);\n        setCategories([]);\n      }).finally(function () {\n        return setLoading(false);\n      });\n    }\n  }, [isNotFound]);\n  useEffect(function () {\n    if (itHasLength(categoriesList)) {\n      var fields = page.fields,\n          requiredFieldsLabel = page.requiredFieldsLabel,\n          submitLabel = page.submitLabel,\n          pageRest = _objectWithoutProperties(page, [\"fields\", \"requiredFieldsLabel\", \"submitLabel\"]); // Define a new property to `category`..\n\n\n      fields.category.categoriesList = categoriesList.tagsList;\n      var globalLabels = {\n        fields: fields,\n        requiredFieldsLabel: requiredFieldsLabel,\n        submitLabel: submitLabel,\n        errorMessage: pageRest.errorMessage,\n        successMessage: pageRest.successMessage,\n        analysisMessage: pageRest.analysisMessage\n      };\n      var _pageOptions = {\n        globalLabels: globalLabels,\n        title: pageRest.title,\n        slug: pageRest.slug\n      };\n      setPageOptions(_pageOptions);\n    }\n  }, [router.query, categoriesList]);\n\n  if (!itHasLength(pageOptions) || isNotFound) {\n    return __jsx(\"p\", null, \"The Register page you're looking for was not found.\");\n  }\n\n  return __jsx(Layout, _extends({}, props, {\n    routerProps: router,\n    seoProps: seoProps\n  }), __jsx(Header, _extends({\n    router: router\n  }, props)), __jsx(Paper, {\n    elevation: 3,\n    className: classes.paper\n  }, itHasLength(pageOptions) && itHasLength(pageOptions.globalLabels) ? __jsx(PageContent, pageOptions.globalLabels) : __jsx(Box, {\n    className: clsx(classes.root, classes.alignRight)\n  }, __jsx(Box, {\n    display: \"flex\",\n    alignSelf: \"flex-end\",\n    width: \"90%\"\n  }, __jsx(Skeleton, {\n    variant: \"text\",\n    width: '100%',\n    height: 50\n  })), __jsx(Box, {\n    display: \"flex\",\n    flexDirection: \"column\",\n    mt: 2,\n    width: \"100%\"\n  }, __jsx(Box, {\n    pb: 1,\n    w: '50%'\n  }, __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  }), __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  })), __jsx(Box, {\n    pb: 1,\n    w: '50%'\n  }, __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  }), __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  })), __jsx(Skeleton, {\n    variant: \"rect\",\n    animation: \"wave\",\n    height: 30\n  }), __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  }), __jsx(Skeleton, {\n    variant: \"rect\",\n    height: 30\n  })))), __jsx(Footer, _extends({\n    router: router\n  }, props)));\n};\n\nexport var __N_SSP = true;\nexport default AuthRegister;","map":null,"metadata":{},"sourceType":"module"}