{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connectRefinementList } from 'react-instantsearch-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, InputLabel, Input, Select, MenuItem, Checkbox, ListItemText } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: _defineProperty({\n      margin: theme.spacing(1),\n      minWidth: 180,\n      maxWidth: 300\n    }, theme.breakpoints.down('xs'), {\n      width: '100%',\n      maxWidth: '100%'\n    }),\n    textField: {\n      paddingTop: theme.spacing(1),\n      marginRight: theme.spacing(1)\n    },\n    checkItem: {\n      padding: 0\n    },\n    itemText: {\n      marginLeft: theme.spacing(0.5)\n    }\n  };\n});\n\nvar CustomCategoriesList = function CustomCategoriesList(_ref) {\n  var items = _ref.items,\n      refine = _ref.refine,\n      _ref$translations = _ref.translations,\n      translations = _ref$translations === void 0 ? {} : _ref$translations;\n  var _filterLabel = 'Categories';\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      attributeNames = _useState[0],\n      setAttributeNames = _useState[1];\n\n  useEffect(function () {\n    var names = items.filter(function (item) {\n      return item.isRefined;\n    }).map(function (name) {\n      return name.label;\n    });\n    setAttributeNames(names);\n    return function () {\n      return names;\n    };\n  }, [items]);\n  var itemHeight = 48;\n  var itemPaddingTop = 8;\n  var MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: itemHeight * 4.5 + itemPaddingTop,\n        width: 250\n      }\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    var target = event.target;\n    setAttributeNames(target.value);\n    refine(target.value);\n  };\n\n  return __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"mutiple-checkbox-label\"\n  }, translations.label || _filterLabel), __jsx(Select, {\n    labelId: \"mutiple-checkbox-label\",\n    id: \"mutiple-checkbox\",\n    multiple: true,\n    value: attributeNames,\n    onChange: handleChange,\n    input: __jsx(Input, null),\n    renderValue: function renderValue(selected) {\n      return selected.join(', ');\n    },\n    MenuProps: MenuProps,\n    className: classes.textField\n  }, __jsx(MenuItem, {\n    value: \"\"\n  }, __jsx(\"em\", null, \"-- \", translations.label || _filterLabel, \" --\")), items.map(function (item, i) {\n    return __jsx(MenuItem, {\n      key: i,\n      value: item.label\n    }, __jsx(Checkbox, {\n      className: classes.checkItem,\n      checked: item.isRefined\n    }), __jsx(ListItemText, {\n      className: classes.itemText,\n      primary: item.label\n    }));\n  })));\n};\n\nvar ConnectedCategoriesList = connectRefinementList(CustomCategoriesList);\nexport default ConnectedCategoriesList;","map":null,"metadata":{},"sourceType":"module"}