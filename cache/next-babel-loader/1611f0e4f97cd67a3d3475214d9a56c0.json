{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Paper, CardMedia } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  }\n}));\nconst DynamicSmallBanner = dynamic(() => import('./SmallBanner'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./SmallBanner')],\n    modules: ['./SmallBanner']\n  }\n});\n\nconst FullLogo = props => {\n  const {\n    title,\n    url\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"title\", \"url\"]);\n\n  const urlParams = Object.keys(restProps).map(item => `${item}=${restProps[item]}`).join('&');\n  const fullUrl = url + '&' + urlParams;\n  return __jsx(Paper, {\n    elevation: 0\n  }, __jsx(CardMedia, {\n    image: fullUrl,\n    title: title,\n    style: {\n      height: 100\n    }\n  }));\n};\n\nconst Header = props => {\n  const {\n    router,\n    logoObj,\n    bannerHeader,\n    menuHeader\n  } = props;\n  const hasRoute = router && router.route ? true : false;\n  const bannerLoaded = typeof bannerHeader === \"object\";\n  const isSameRouter = hasRoute && bannerLoaded && router.route === bannerHeader.pageSlug;\n  const classes = useStyles();\n  return __jsx(Box, {\n    className: classes.root\n  }, __jsx(FullLogo, logoObj), bannerLoaded && Boolean(!isSameRouter) && bannerHeader.size === 'small' && __jsx(DynamicSmallBanner, bannerHeader));\n};\n\nexport default Header;","map":null,"metadata":{},"sourceType":"module"}