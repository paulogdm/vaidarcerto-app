{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { connectRefinementList } from 'react-instantsearch-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, InputLabel, Input, Select, MenuItem, Checkbox, ListItemText } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 180,\n    maxWidth: 300,\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n      maxWidth: '100%'\n    }\n  },\n  textField: {\n    paddingTop: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  checkItem: {\n    padding: 0\n  },\n  itemText: {\n    marginLeft: theme.spacing(0.5)\n  }\n}));\n\nconst CustomCategoriesList = ({\n  items,\n  refine,\n  translations = {}\n}) => {\n  const _filterLabel = 'Categories';\n  const classes = useStyles();\n  const {\n    0: attributeNames,\n    1: setAttributeNames\n  } = useState([]);\n  useEffect(() => {\n    const names = items.filter(item => item.isRefined).map(name => name.label);\n    setAttributeNames(names);\n    return () => names;\n  }, [items]);\n  const itemHeight = 48;\n  const itemPaddingTop = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: itemHeight * 4.5 + itemPaddingTop,\n        width: 250\n      }\n    }\n  };\n\n  const handleChange = event => {\n    const target = event.target;\n    setAttributeNames(target.value);\n    refine(target.value);\n  };\n\n  return __jsx(FormControl, {\n    className: classes.formControl\n  }, __jsx(InputLabel, {\n    id: \"mutiple-checkbox-label\"\n  }, translations.label || _filterLabel), __jsx(Select, {\n    labelId: \"mutiple-checkbox-label\",\n    id: \"mutiple-checkbox\",\n    multiple: true,\n    value: attributeNames,\n    onChange: handleChange,\n    input: __jsx(Input, null),\n    renderValue: selected => selected.join(', '),\n    MenuProps: MenuProps,\n    className: classes.textField\n  }, __jsx(MenuItem, {\n    value: \"\"\n  }, __jsx(\"em\", null, \"-- \", translations.label || _filterLabel, \" --\")), items.map((item, i) => __jsx(MenuItem, {\n    key: i,\n    value: item.label\n  }, __jsx(Checkbox, {\n    className: classes.checkItem,\n    checked: item.isRefined\n  }), __jsx(ListItemText, {\n    className: classes.itemText,\n    primary: item.label\n  })))));\n};\n\nconst ConnectedCategoriesList = connectRefinementList(CustomCategoriesList);\nexport default ConnectedCategoriesList;","map":null,"metadata":{},"sourceType":"module"}