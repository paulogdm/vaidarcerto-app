{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Chip } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\nimport { itHasLength } from '~/modules/utils/objects';\nimport NextLink from './Link';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    chips: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      '& > *': {\n        margin: theme.spacing(1)\n      }\n    },\n    chipItem: {\n      borderRadius: 5\n    }\n  };\n});\n\nvar TagsBox = function TagsBox(props) {\n  var dataObj = props.dataObj,\n      route = props.route;\n  var classes = useStyles();\n  return __jsx(Box, null, !itHasLength(dataObj) ? __jsx(React.Fragment, null, __jsx(Skeleton, {\n    animation: \"wave\",\n    height: 10,\n    style: {\n      marginBottom: 6\n    }\n  }), __jsx(Skeleton, {\n    animation: \"wave\",\n    width: \"80%\",\n    height: 20\n  })) : __jsx(Box, {\n    className: classes.chips\n  }, itHasLength(dataObj.category) && Object.values(dataObj.category).map(function (categ, kC) {\n    return __jsx(React.Fragment, {\n      key: kC\n    }, __jsx(Chip, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      classes: {\n        root: classes.chipItem\n      },\n      clickable: true,\n      component: NextLink,\n      href: route.pathname,\n      as: route.href.replace('{param}', categ),\n      label: categ\n    }));\n  })));\n};\n\nexport default TagsBox;","map":null,"metadata":{},"sourceType":"module"}