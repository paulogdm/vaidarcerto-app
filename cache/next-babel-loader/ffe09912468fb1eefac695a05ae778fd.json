{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { Grid, Typography } from '@material-ui/core';\nimport AnnouncementOutlinedIcon from '@material-ui/icons/AnnouncementOutlined';\nimport { itHasLength } from '~/modules/utils/objects';\nimport fetchPost from '~/services/api/get-post';\nimport fetchGlobals from '~/services/api/global-settings';\nimport { useCustomerStyles } from '~/assets/styles/customer';\nimport Layout from '~/components/Layout';\nimport Header from '~/components/Header';\nimport { GoldAd, PremiumAd, PlatinumAd } from '~/components/ads/BodyAds';\nimport Footer from '~/components/Footer';\nconst DynamicSegmentsList = dynamic(() => import('~/components/SegmentList'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/SegmentList')],\n    modules: ['~/components/SegmentList']\n  }\n});\nconst CustomersList = dynamic(() => import('~/components/customer/CustomersList'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('~/components/customer/CustomersList')],\n    modules: ['~/components/customer/CustomersList']\n  }\n});\nconst goldMocked = [{\n  title: 'Gold 01 - Banner',\n  image: ''\n}, {\n  title: 'Gold 02 - Banner',\n  image: ''\n}];\nconst premiumMocked = [{\n  title: 'Premium 01 - Anúncio',\n  image: ''\n}, {\n  title: 'Premium 02 - Anúncio',\n  image: ''\n}];\nconst platinumMocked = [{\n  title: 'Platinum 01 - Anúncio',\n  primaryText: 'Frase marcante da sua empresa',\n  image: ''\n}, {\n  title: 'Platinum 02 - Anúncio',\n  primaryText: 'Frase marcante da sua empresa',\n  image: ''\n}];\n\nconst Home = props => {\n  const {\n    page,\n    seoProps,\n    isNotFound\n  } = props,\n        rest = _objectWithoutProperties(props, [\"page\", \"seoProps\", \"isNotFound\"]);\n\n  const router = useRouter();\n  const classes = useCustomerStyles();\n\n  if (isNotFound) {\n    return __jsx(\"p\", null, \"The page you're looking for was not found.\");\n  }\n\n  return __jsx(Layout, _extends({}, rest, {\n    routerProps: router,\n    seoProps: seoProps\n  }), __jsx(Header, _extends({\n    router: router\n  }, props)), __jsx(DynamicSegmentsList, {\n    routerProps: router\n  }), __jsx(Grid, {\n    container: true,\n    alignItems: \"flex-start\"\n  }, __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    sm: 8\n  }, __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    spacing: 1,\n    item: true,\n    xs: 12,\n    className: classes.announcementHeader\n  }, __jsx(AnnouncementOutlinedIcon, null), __jsx(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true\n  }, \"Anunciantes que acreditam no nosso trabalho\")), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    item: true,\n    xs: 12\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    item: true,\n    xs: 12\n  }, Object.keys(goldMocked).map((k, i) => __jsx(Grid, {\n    key: k,\n    item: true,\n    xs: true\n  }, __jsx(GoldAd, {\n    itemProps: goldMocked[k],\n    thumbDimensions: {\n      width: 240,\n      height: 140\n    },\n    square: true\n  })))), __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    spacing: 1,\n    item: true,\n    xs: 12\n  }, Object.keys(premiumMocked).map((k, i) => __jsx(Grid, {\n    key: k,\n    item: true,\n    xs: true\n  }, __jsx(PremiumAd, {\n    key: k,\n    itemProps: premiumMocked[k],\n    thumbDimensions: {\n      width: 60,\n      height: 60\n    }\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    item: true,\n    xs: 12\n  }, Object.keys(platinumMocked).map((k, i) => __jsx(Grid, {\n    key: k,\n    item: true,\n    xs: true\n  }, __jsx(PlatinumAd, {\n    key: k,\n    itemProps: platinumMocked[k]\n  })))))), __jsx(Grid, {\n    container: true,\n    item: true,\n    xs: 12,\n    sm: 4\n  }, __jsx(CustomersList, {\n    sectionTitle: \"Anunciantes trabalhando por voc\\xEA\",\n    noAvatar: true\n  }))), __jsx(Footer, _extends({\n    router: router\n  }, props)));\n};\n\nexport const getStaticProps = async context => {\n  const {\n    req,\n    res,\n    query\n  } = context,\n        rest = _objectWithoutProperties(context, [\"req\", \"res\", \"query\"]);\n\n  const globalsResponse = await fetchGlobals();\n  const dataProps = {\n    isNotFound: false\n  };\n  const slugQuery = '/';\n  const queryOptions = {\n    label: 'slug',\n    value: slugQuery\n  };\n  const page = await fetchPost(queryOptions);\n\n  if (!itHasLength(page)) {\n    dataProps.isNotFound = true;\n  } else {\n    const seoProps = {\n      title: page.title,\n      description: page.description\n    };\n    dataProps.seoProps = seoProps;\n  }\n\n  return {\n    props: _objectSpread(_objectSpread(_objectSpread({}, globalsResponse), dataProps), {}, {\n      page\n    }),\n    revalidate: 300\n  };\n};\nexport default Home;","map":null,"metadata":{},"sourceType":"module"}