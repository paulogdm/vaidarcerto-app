{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport { itHasLength } from '~/modules/utils/objects';\nimport fetchPost from '~/services/api/get-post';\nimport fetchGlobals from '~/services/api/global-settings';\nimport Layout from '~/components/Layout';\nimport Header from '~/components/Header';\nimport Footer from '~/components/Footer';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(0.5, 2),\n    [theme.breakpoints.down('md')]: {\n      padding: theme.spacing(0.5)\n    }\n  }\n}));\nconst DynamicMarkdown = dynamic(() => import('react-markdown'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('react-markdown')],\n    modules: ['react-markdown']\n  }\n});\n\nconst PostCardItem = props => {\n  const {\n    title,\n    slug,\n    primaryText,\n    secondaryText\n  } = props;\n  const classes = useStyles();\n  return __jsx(Card, {\n    className: classes.root\n  }, __jsx(CardHeader, {\n    title: title,\n    subheader: primaryText\n  }), __jsx(CardContent, {\n    className: classes.content\n  }, __jsx(Typography, {\n    component: \"div\",\n    className: classes.mBottom,\n    variant: \"body2\",\n    color: \"textSecondary\"\n  }, secondaryText.spanOne), __jsx(Typography, {\n    className: classes.mBottom,\n    variant: \"body2\",\n    color: \"textSecondary\",\n    component: \"div\"\n  }, __jsx(DynamicMarkdown, {\n    source: secondaryText.spanTwo\n  }))));\n};\n\nconst PostItem = props => {\n  const {\n    page,\n    seoProps,\n    isNotFound\n  } = props,\n        rest = _objectWithoutProperties(props, [\"page\", \"seoProps\", \"isNotFound\"]);\n\n  const router = useRouter();\n\n  if (isNotFound) {\n    return __jsx(\"p\", null, \"The Ad you're looking for is not found.\");\n  }\n\n  return __jsx(Layout, _extends({}, rest, {\n    routerProps: router,\n    seoProps: seoProps\n  }), __jsx(Header, _extends({\n    router: router\n  }, rest)), __jsx(PostCardItem, page), __jsx(Footer, _extends({\n    router: router\n  }, rest)));\n};\n\nexport const getServerSideProps = async ({\n  query\n}) => {\n  const globalsResponse = await fetchGlobals();\n  const dataProps = {\n    isNotFound: false\n  };\n  const slugQuery = query.slug;\n  const queryOptions = {\n    label: 'slug',\n    value: slugQuery\n  };\n  const page = await fetchPost(queryOptions);\n\n  if (!itHasLength(page)) {\n    dataProps.isNotFound = true;\n  } else {\n    const seoProps = {\n      title: page.title,\n      description: page.primaryText\n    };\n    dataProps.seoProps = seoProps;\n  }\n\n  return {\n    props: _objectSpread(_objectSpread(_objectSpread({}, globalsResponse), dataProps), {}, {\n      page\n    })\n  };\n};\nexport default PostItem;","map":null,"metadata":{},"sourceType":"module"}