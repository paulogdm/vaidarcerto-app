{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { Line } from 'react-chartjs-2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    lbTitle: {\n      padding: '18px 16px',\n      fontWeight: 700,\n      letterSpacing: -0.84\n    },\n    bdrBottom: {\n      borderBottom: 'solid 1px rgba(219, 233, 245, 0.6)'\n    },\n    size_18: {\n      fontSize: 18,\n      lineHeight: '24px'\n    },\n    chartCard: {\n      margin: '32px 16px 22px',\n      marginBottom: 50,\n      width: 'calc(100% - 32px)'\n    },\n    noBorder: {\n      border: 'none',\n      boxShadow: 'none'\n    }\n  };\n});\n\nvar ChartCard = function ChartCard(props) {\n  var _props$confirmed = props.confirmed,\n      confirmed = _props$confirmed === void 0 ? {} : _props$confirmed,\n      _props$deaths = props.deaths,\n      deaths = _props$deaths === void 0 ? {} : _props$deaths,\n      labels = props.labels;\n  var classes = useStyles();\n  return __jsx(Box, {\n    className: clsx(classes.chartCard, classes.noBorder)\n  }, __jsx(Line, {\n    data: {\n      labels: labels,\n      datasets: [{\n        label: confirmed.legend,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: '#5d78ff',\n        borderColor: '#5d78ff',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#5d78ff',\n        pointBackgroundColor: '#5d78ff',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#5d78ff',\n        pointHoverBorderColor: '#5d78ff',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: confirmed.data\n      }, {\n        label: deaths.legend,\n        fill: false,\n        lineTension: 0.1,\n        backgroundColor: '#fab822',\n        borderColor: '#fab822',\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        pointBorderColor: '#fab822',\n        pointBackgroundColor: '#fab822',\n        pointBorderWidth: 1,\n        pointHoverRadius: 5,\n        pointHoverBackgroundColor: '#fab822',\n        pointHoverBorderColor: '#fab822',\n        pointHoverBorderWidth: 2,\n        pointRadius: 3,\n        pointHitRadius: 10,\n        data: deaths.data\n      }]\n    },\n    height: 250,\n    options: {\n      maintainAspectRatio: false,\n      scales: {\n        yAxes: [{\n          ticks: {\n            callback: function callback(value, index, values) {\n              return Number(value).toLocaleString(navigator.language, {\n                notation: \"compact\"\n              });\n            }\n          }\n        }]\n      },\n      legend: {\n        reverse: true,\n        position: 'bottom'\n      }\n    }\n  }));\n};\n\nvar AccumulatedData = function AccumulatedData(props) {\n  var _props$data = props.data,\n      data = _props$data === void 0 ? [] : _props$data,\n      labels = props.labels;\n\n  var _useState = useState([]),\n      _labels = _useState[0],\n      _setLabels = _useState[1];\n\n  var _useState2 = useState([]),\n      _qtdConfirmed = _useState2[0],\n      _setQtdConfirmed = _useState2[1];\n\n  var _useState3 = useState([]),\n      _qtdDeaths = _useState3[0],\n      _setQtdDeaths = _useState3[1];\n\n  useEffect(function () {\n    Object.values(data).map(function (item) {\n      _setLabels(function (prev) {\n        return [].concat(_toConsumableArray(prev), [item.label]);\n      });\n\n      _setQtdConfirmed(function (prev) {\n        return [].concat(_toConsumableArray(prev), [item.qtd_confirmado]);\n      });\n\n      _setQtdDeaths(function (prev) {\n        return [].concat(_toConsumableArray(prev), [item.qtd_obito]);\n      });\n\n      return item;\n    });\n  }, [data]);\n  var classes = useStyles();\n  return __jsx(\"div\", null, __jsx(Typography, {\n    className: clsx(classes.lbTitle, classes.size_18, classes.bdrBottom),\n    component: \"p\"\n  }, labels.confirmedCases), __jsx(ChartCard, {\n    labels: _labels,\n    confirmed: {\n      legend: labels.confirmed,\n      data: _qtdConfirmed\n    },\n    deaths: {\n      legend: labels.deaths,\n      data: _qtdDeaths\n    }\n  }));\n};\n\nexport default AccumulatedData;","map":null,"metadata":{},"sourceType":"module"}